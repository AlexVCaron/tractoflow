process {
    publishDir = {"./results/$dir_id/$task.process"}
    scratch = true
    stageInMode = 'copy'
    stageOutMode = 'rsync'
    tag = { "$sid" }
}

params {
    //**Global options**//
        //all b-values below b0_thr_extract_b0 are considered b=0 images
            b0_thr_extract_b0=10
        //all b-values to +-dwi_shell_tolerance are considered as the same b-value 
            dwi_shell_tolerance=20

    //**Preliminary DWI brain extraction**//
        //Dilation factor to keep the whole brain. Not the final extraction.
            dilate_b0_mask_prelim_brain_extraction=5

    //**Denoise dwi (dwidenoise in Mrtrix3)**//
        //Run dwi denoising
            run_dwi_denoising=true
        //Denoising block size. Rule: extent^3 >= number of directions
            extent=7

    //**Topup**//
        //Run topup
            run_topup=true
        //Topup config file
            config_topup="b02b0.cnf"
        //Encoding direction of the DWI [x, y, z]
            encoding_direction="y"
        //Dwell-time
            dwell_time=0.062
        //Output prefix for topup files
            prefix_topup="topup_results"

    //**Eddy**//
        //Run eddy
            run_eddy=true
        //Eddy command to use [eddy, eddy_openmp, eddy_cuda]
            eddy_cmd="eddy_openmp"

    //**Resample T1**//
        //Run resample T1
            run_resample_t1=true
        //T1 resolution
            t1_resolution=1
        //Interpolation method [nn, lin, quad, cubic]
            t1_interpolation="lin"

    //**Resample DWI**//
        //Run resample DWI
            run_resample_dwi=true
        //DWI resolution
            dwi_resolution=1
        //Interpolation method [nn, lin, quad, cubic]
            dwi_interpolation="cubic"

    //**DTI shells**//
        //Shells to extract to compute the dti metrics (generally b < 1200) 
            dti_shells="0 300 1000"

    //**fODF shells**//
        //Shells to extract to compute the fodf metrics (generally b > 700)
            fodf_shells="0 1000 2000"

    //**Segment tissues**//
        //Number of tissue classes
            number_of_tissue=3

    //**Compute fiber response function (frf)**//
        //Initial FA threshold to compute the frf 
            fa=0.7
        //Minimum FA threshold to compute the frf
            min_fa=0.5
        //Minimum number of voxels to compute the frf
            min_nvox=300
        //Region of interest radius to compute the frf
            roi_radius=20
        //Set manually the frf with `manual_frf`
            set_frf=false
            manual_frf="15,4,4"

    //**Mean fiber response function (frf)**//
        //Mean the frf of all subjects.
        //USE ONLY IF ALL OF SUBJECTS COME FROM THE SAME SCANNER
        //AND HAVE THE SAME ACQUISITION
            mean_frf=true

    //**Compute fODF metrics**//
        //Spherical harmonics order.
        //Rules :-sh_order=8 for 45 directions
        //       -sh_order=6 for 28 directions
            sh_order=8
        //fODF basis [fibernav, mrtrix]
            basis="fibernav"
        //Multiplicative factor for afd max in ventricles
            fodf_metrics_a_factor=2.0

    //**Seeding mask**//
        //If `wm_seeding=false`, use the WM-GM interface as seeding mask.
        //If `wm_seeding=true`, use the WM-GM interface and 
        //the WM mask as seeding mask
            wm_seeding=true

    //**PFT tracking**//
        //Compress streamlines
            compress_streamlines=true
        //Tracking algorithm [prob, det]
            algo="prob"
        //Seeding type [npv, nt, ns]
            seeding="npv"
        //Number of seeds related to the seeding type param
            nbr_seeds=10
        //Random seed
            random=0
        //Step size
            step=0.5
        //Runge-Kutta order
            rk_order=2
        //Maximum angle between 2 steps
            theta=20
        //Maximum length without valid direction
            maxL_no_dir=1
        //Spherical function relative threshold
            sfthres=0.1
        //Spherical function threshold for the initial direction
            sfthres_init=0.5
        //Minimum length
            minL=10
        //Maximum length
            maxL=300
        //Spherical harmonic interpolation method [nn, tl]
            sh_interp="tl"
        //Mask interpolation method [nn, tl]
            mask_interp="nn"
        //[PFT] Number of particles
            particles=15
        //[PFT] Length back tracking
            back=2
        //[PFT] Length front tracking
            front=1
        //[PFT] Maximum angle between 2 steps
            pft_theta=20
        //Compressing value
            compress_value=0.2

    //**Number of processes per tasks**//
    processes_brain_extraction_dwi=4
    processes_brain_extraction_t1=8
    processes_denoise_dwi=4
    processes_denoise_t1=4
    processes_eddy=8
    processes_fodf=4
    processes_registration=4
    processes_tracking=8

    //**Maximum number of processes**//
    //This is not controlled the tasks
    processes=8

    //**Output directory**//
        //Default: ./results
            params.output_dir=false
}

env {
    ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
    MRTRIX_NTHREADS=1
    OMP_NUM_THREADS=1
    OPENBLAS_NUM_THREADS=1
}

if(params.processes) {
    if(params.processes > Runtime.runtime.availableProcessors()) {
        throw new RuntimeException("Number of processes higher than available CPUs.")
    }
    else if(params.processes < 1) {
        throw new RuntimeException("When set, number of processes must be >= 1 " +
                                   "and smaller or equal to the number of CPUs.")
    }
    else {
        executor.$local.cpus = params.processes
    }
}

if(params.output_dir) {
    process.publishDir = {"$params.output_dir/$dir_id/$task.process"}
}